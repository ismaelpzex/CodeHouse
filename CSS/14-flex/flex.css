* {
    margin: 0;
}

.container {
    width: 80%;
    max-width: 800px;
    margin: 0 auto;
}

.padre {
    height: 300px;
    border: 2px solid black;
    background: pink;
    display: flex;                          /*? Flex se le da al padre, para poder manejar a los hijos que tenga dentro */ /* Pone todos los hijos en fila, y pasan a tener el ancho de su contenido */


                /* ! PROPIEDADES QUE SE LE ASIGNAN AL PADRE */
                                            
    
                /*! flex-direction - para indicarle la direci√≥n a los hijos */

    /* flex-direction: column; */               /*? Para que la direcci√≥n sea en columnas */
    /* flex-direction:column-reverse; */        /*? Para que la direcci√≥n sea en columnas al rev√©s */
    /* flex-direction: row */                   /*? Para que la direcci√≥n sea en filas */
    /* flex-direction: row-reverse;  */         /*? Para que la direcci√≥n sea en fila al rev√©s */


                /*! justify-content - para alienar elementos en el main-axis (üëà--üëâ) */

    /* justify-content: flex-end;  */           /*? Para alinear al final */
    /* justify-content: center;  */             /*? Para centrar */
    /* justify-content: space-between; */       /*? El primero y el √∫ltimo al principio y al final, el resto repartidos */
    /* justify-content: space-around; */        /*? El mismo espaciado en los dos lados de cada hijo - no se usa mucho */
    /* justify-content: space-evenly; */        /*? Mismo espacio al principio y al final de cada hijo */


                /*! align-items - para alienar elementos en el cross-axis (üëÜ--üëá) */

    /* align-items: flex-start; */              /*? Para alinear al principio */
    /* align-items: flex-end;  */               /*? Para alienar al final */
    /* align-items: center;  */                 /*? Para centrar */
    /* align-items: baseline;  */               /*? Para alinear seg√∫n la l√≠nea de texto */
    /* align-items: stretch;  */                /*? Por defecto, si los hijos no tienen altura fija, los estira */


                /*! flex-wrap - Para cuando no quepan las cajas, que bajen */

    flex-wrap: wrap;                            /*? Para que bajen, cuando no quepan */
    /* flex-wrap: wrap-reverse;  */             /*? Para que hagan wrap al rev√©s */


                /*! align-content - Para decidir como se alinean las filas cuando existe un wrap */

    align-content: flex-start;                  /*? Para alinear las filas juntas, sin espacio */
    /* align-content: flex-end; */              /*? Para alinear las filas juntas, sin espacio al final */
    /* align-content: space-between; */         /*? La primera y la √∫ltima fila al principio y al final, el resto repartidas */
    /* align-content: space-around; */          /*? El mismo espaciado en los dos lados de cada hijo - no se usa mucho */
    /* align-content: space-evenly; */          /*? Mismo espacio al principio y al final de cada fila */
    /* align-content: center;  */               /*? Para centrar */


                /*!  Para decidir el espacio entre filas y columnas, usamos row-gap, colum-gap y gap */

    /* column-gap: 2rem; */                     /*? Para separar columnas */
    /* row-gap: 1rem; */                        /*? Para separar filas */
    gap: 3rem;                                  /*? Para separar columnas y filas */
}



                /*! PROPIEDADES A LOS HIJOS */


.hijo {
    border: 2px solid white;
    padding: 0.3rem;
    height: 50px;
    order: 1;
}
.hijo1 {
    background: crimson;
}
.hijo2 {
    background: gold;
    order: 0;                               /*? Para cambiar el orden de los hijos, usamos "order" todos parten de order 0, */
    /* flex-grow: 1;  */                    /*? Para que un hijo crezca, usamos flex-grow: 1; Por defecto es 0*/
                                            /*? Si a un hijo le damos 4 y a otro 2, el primero crecer√° el doble del segundo*/
    /* flex-shrink: 0;  */                  /*? Para que un hijo NO se haga peque√±o usamos flex-shrink 0, por defecto es 1 (SI SE HACE PEQUE√ëO)*/
}
.hijo3 {
    background: lightseagreen;
}
.hijo7 {
    background: salmon;
     flex: 3;                               /*? Con "flex" indicamos el tama√±o que queremos que ocupe una caja, en este caso, hijo7 ocupa 3 de 5 totales e hijo8 2 de 5 */
}
.hijo8 {
    background: purple;
    /* flex: 2; */
    align-self: flex-end;                   /*? Para desplazar un s√≥lo elemento hacia abajo en cross-axis, en este caso - no funcionan porque est√° en wrap */
    margin-left: auto;                      /*? Para desplazar un solo elemento en el main-axis */
}